---
- name: Create and terminate EC2 instances
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    aws_region: "us-east-2"
    build_number: "{{ lookup('env','BUILD_NUMBER') }}"
    ec2_tags:
      Name: "Wilson Test Deployment"
      app: "wilson-test-deployment"
    ec2_current_tag:
      build_number: "{{ build_number }}"

  tasks:
  - name: ansible create EC2
    ec2:
      key_name: Wilson-Test-EC2KeyPair
      instance_type: t2.micro
      image: ami-04328208f4f0cf1fe
      wait: yes
      wait_timeout: 500
      count: 5
      region: "{{ aws_region }}"
      instance_tags:
        app: "wilson-test-deployment"
        Name: "Wilson Test Deployment"
        version: "{{ build_number }}"
    register: ec2

  - name: ansible filter EC2 by label
    ec2_instance_facts:
      region: "{{ aws_region }}"
      filters:
        instance-state-name: running
        "tag:Name": "Wilson Test Deployment"
        "tag:app": "wilson-test-deployment"
    register: ec2_facts

  - name: Filter EC2 instances
    set_fact:
      ec2_instances: |
        {% set instances = [] %}
        {% for item in ec2_facts.instances if item.tags.version != build_number -%}
          {{ instances.append(item.instance_id) }}
        {%- endfor %}
        {{ instances }}
  - name: Terminate EC2 server
    ec2:
      region: "{{ aws_region }}"
      instance_ids: "{{ item }}"
      state: 'absent'
    with_items: "{{ ec2_instances }}"